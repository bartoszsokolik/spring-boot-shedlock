version: '3.7'

services:
  postgres:
    image: 'postgres'
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - './init.sql:/docker-entrypoint-initdb.d/init.sql'

  a:
    build:
      context: ./
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: production_user
      POSTGRES_PASSWORD: production
      POSTGRES_URL: jdbc:postgresql://postgres:5432/test?currentSchema=test_schema
      SERVICE_NAME: A
      APP_OPTS: --spring.datasource.url=jdbc:postgresql://postgres:5432/production?currentSchema=production_schema
    entrypoint: './wait-for-it.sh -t 10 postgres:5432 -- /run.sh'
  b:
    build:
      context: ./
    ports:
      - '8081:8080'
    depends_on:
      - postgres
      - a
    environment:
      POSTGRES_USER: production_user
      POSTGRES_PASSWORD: production
      POSTGRES_URL: jdbc:postgresql://postgres:5432/test?currentSchema=test_schema
      SERVICE_NAME: B
      APP_OPTS: --spring.datasource.url=jdbc:postgresql://postgres:5432/production?currentSchema=production_schema
    entrypoint: './wait-for-it.sh -t 120 a:8080 -- /run.sh'